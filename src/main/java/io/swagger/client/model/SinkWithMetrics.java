/*
 * Timeplus
 * Welcome to the Timeplus HTTP REST API specification.
 *
 * OpenAPI spec version: v1beta1
 * Contact: eng@timeplus.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Owner;
import io.swagger.client.model.SinkMetrics;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * SinkWithMetrics
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-08-27T00:55:54.866Z")
public class SinkWithMetrics {
  @SerializedName("created_at")
  private String createdAt = null;

  @SerializedName("created_by")
  private Owner createdBy = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("last_updated_at")
  private String lastUpdatedAt = null;

  @SerializedName("last_updated_by")
  private Owner lastUpdatedBy = null;

  @SerializedName("metrics")
  private SinkMetrics metrics = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("properties")
  private Map<String, Object> properties = null;

  @SerializedName("queries")
  private List<String> queries = null;

  @SerializedName("type")
  private String type = null;

  public SinkWithMetrics createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @ApiModelProperty(value = "")
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  public SinkWithMetrics createdBy(Owner createdBy) {
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Get createdBy
   * @return createdBy
  **/
  @ApiModelProperty(value = "")
  public Owner getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(Owner createdBy) {
    this.createdBy = createdBy;
  }

  public SinkWithMetrics description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public SinkWithMetrics id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public SinkWithMetrics lastUpdatedAt(String lastUpdatedAt) {
    this.lastUpdatedAt = lastUpdatedAt;
    return this;
  }

   /**
   * Get lastUpdatedAt
   * @return lastUpdatedAt
  **/
  @ApiModelProperty(value = "")
  public String getLastUpdatedAt() {
    return lastUpdatedAt;
  }

  public void setLastUpdatedAt(String lastUpdatedAt) {
    this.lastUpdatedAt = lastUpdatedAt;
  }

  public SinkWithMetrics lastUpdatedBy(Owner lastUpdatedBy) {
    this.lastUpdatedBy = lastUpdatedBy;
    return this;
  }

   /**
   * Get lastUpdatedBy
   * @return lastUpdatedBy
  **/
  @ApiModelProperty(value = "")
  public Owner getLastUpdatedBy() {
    return lastUpdatedBy;
  }

  public void setLastUpdatedBy(Owner lastUpdatedBy) {
    this.lastUpdatedBy = lastUpdatedBy;
  }

  public SinkWithMetrics metrics(SinkMetrics metrics) {
    this.metrics = metrics;
    return this;
  }

   /**
   * Get metrics
   * @return metrics
  **/
  @ApiModelProperty(value = "")
  public SinkMetrics getMetrics() {
    return metrics;
  }

  public void setMetrics(SinkMetrics metrics) {
    this.metrics = metrics;
  }

  public SinkWithMetrics name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public SinkWithMetrics properties(Map<String, Object> properties) {
    this.properties = properties;
    return this;
  }

  public SinkWithMetrics putPropertiesItem(String key, Object propertiesItem) {
    if (this.properties == null) {
      this.properties = new HashMap<String, Object>();
    }
    this.properties.put(key, propertiesItem);
    return this;
  }

   /**
   * Get properties
   * @return properties
  **/
  @ApiModelProperty(value = "")
  public Map<String, Object> getProperties() {
    return properties;
  }

  public void setProperties(Map<String, Object> properties) {
    this.properties = properties;
  }

  public SinkWithMetrics queries(List<String> queries) {
    this.queries = queries;
    return this;
  }

  public SinkWithMetrics addQueriesItem(String queriesItem) {
    if (this.queries == null) {
      this.queries = new ArrayList<String>();
    }
    this.queries.add(queriesItem);
    return this;
  }

   /**
   * Get queries
   * @return queries
  **/
  @ApiModelProperty(value = "")
  public List<String> getQueries() {
    return queries;
  }

  public void setQueries(List<String> queries) {
    this.queries = queries;
  }

  public SinkWithMetrics type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SinkWithMetrics sinkWithMetrics = (SinkWithMetrics) o;
    return Objects.equals(this.createdAt, sinkWithMetrics.createdAt) &&
        Objects.equals(this.createdBy, sinkWithMetrics.createdBy) &&
        Objects.equals(this.description, sinkWithMetrics.description) &&
        Objects.equals(this.id, sinkWithMetrics.id) &&
        Objects.equals(this.lastUpdatedAt, sinkWithMetrics.lastUpdatedAt) &&
        Objects.equals(this.lastUpdatedBy, sinkWithMetrics.lastUpdatedBy) &&
        Objects.equals(this.metrics, sinkWithMetrics.metrics) &&
        Objects.equals(this.name, sinkWithMetrics.name) &&
        Objects.equals(this.properties, sinkWithMetrics.properties) &&
        Objects.equals(this.queries, sinkWithMetrics.queries) &&
        Objects.equals(this.type, sinkWithMetrics.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdAt, createdBy, description, id, lastUpdatedAt, lastUpdatedBy, metrics, name, properties, queries, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SinkWithMetrics {\n");
    
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lastUpdatedAt: ").append(toIndentedString(lastUpdatedAt)).append("\n");
    sb.append("    lastUpdatedBy: ").append(toIndentedString(lastUpdatedBy)).append("\n");
    sb.append("    metrics: ").append(toIndentedString(metrics)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    queries: ").append(toIndentedString(queries)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

