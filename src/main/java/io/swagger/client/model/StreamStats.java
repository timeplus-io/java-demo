/*
 * Timeplus
 * Welcome to the Timeplus HTTP REST API specification.
 *
 * OpenAPI spec version: v1
 * Contact: support@timeplus.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * StreamStats
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-06-06T23:45:14.171Z")
public class StreamStats {
  @SerializedName("earliest_event")
  private String earliestEvent = null;

  @SerializedName("historical_data_bytes")
  private Integer historicalDataBytes = null;

  @SerializedName("latest_event")
  private String latestEvent = null;

  @SerializedName("row_count")
  private Integer rowCount = null;

  @SerializedName("streaming_data_bytes")
  private Integer streamingDataBytes = null;

  public StreamStats earliestEvent(String earliestEvent) {
    this.earliestEvent = earliestEvent;
    return this;
  }

   /**
   * Get earliestEvent
   * @return earliestEvent
  **/
  @ApiModelProperty(example = "2023-02-01T01:02:03.456Z", value = "")
  public String getEarliestEvent() {
    return earliestEvent;
  }

  public void setEarliestEvent(String earliestEvent) {
    this.earliestEvent = earliestEvent;
  }

  public StreamStats historicalDataBytes(Integer historicalDataBytes) {
    this.historicalDataBytes = historicalDataBytes;
    return this;
  }

   /**
   * Get historicalDataBytes
   * @return historicalDataBytes
  **/
  @ApiModelProperty(example = "234567", value = "")
  public Integer getHistoricalDataBytes() {
    return historicalDataBytes;
  }

  public void setHistoricalDataBytes(Integer historicalDataBytes) {
    this.historicalDataBytes = historicalDataBytes;
  }

  public StreamStats latestEvent(String latestEvent) {
    this.latestEvent = latestEvent;
    return this;
  }

   /**
   * Get latestEvent
   * @return latestEvent
  **/
  @ApiModelProperty(example = "2023-02-13T07:08:09.012Z", value = "")
  public String getLatestEvent() {
    return latestEvent;
  }

  public void setLatestEvent(String latestEvent) {
    this.latestEvent = latestEvent;
  }

  public StreamStats rowCount(Integer rowCount) {
    this.rowCount = rowCount;
    return this;
  }

   /**
   * Get rowCount
   * @return rowCount
  **/
  @ApiModelProperty(example = "20", value = "")
  public Integer getRowCount() {
    return rowCount;
  }

  public void setRowCount(Integer rowCount) {
    this.rowCount = rowCount;
  }

  public StreamStats streamingDataBytes(Integer streamingDataBytes) {
    this.streamingDataBytes = streamingDataBytes;
    return this;
  }

   /**
   * Get streamingDataBytes
   * @return streamingDataBytes
  **/
  @ApiModelProperty(example = "12345", value = "")
  public Integer getStreamingDataBytes() {
    return streamingDataBytes;
  }

  public void setStreamingDataBytes(Integer streamingDataBytes) {
    this.streamingDataBytes = streamingDataBytes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StreamStats streamStats = (StreamStats) o;
    return Objects.equals(this.earliestEvent, streamStats.earliestEvent) &&
        Objects.equals(this.historicalDataBytes, streamStats.historicalDataBytes) &&
        Objects.equals(this.latestEvent, streamStats.latestEvent) &&
        Objects.equals(this.rowCount, streamStats.rowCount) &&
        Objects.equals(this.streamingDataBytes, streamStats.streamingDataBytes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(earliestEvent, historicalDataBytes, latestEvent, rowCount, streamingDataBytes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StreamStats {\n");
    
    sb.append("    earliestEvent: ").append(toIndentedString(earliestEvent)).append("\n");
    sb.append("    historicalDataBytes: ").append(toIndentedString(historicalDataBytes)).append("\n");
    sb.append("    latestEvent: ").append(toIndentedString(latestEvent)).append("\n");
    sb.append("    rowCount: ").append(toIndentedString(rowCount)).append("\n");
    sb.append("    streamingDataBytes: ").append(toIndentedString(streamingDataBytes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

