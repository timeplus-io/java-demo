/*
 * Timeplus
 * Welcome to the Timeplus HTTP REST API specification.
 *
 * OpenAPI spec version: v1
 * Contact: support@timeplus.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.ColumnsResp;
import io.swagger.client.model.Owner;
import io.swagger.client.model.StreamStats;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * View
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-02-05T18:48:55.783Z")
public class View {
  @SerializedName("columns")
  private List<ColumnsResp> columns = new ArrayList<ColumnsResp>();

  @SerializedName("created_at")
  private String createdAt = null;

  @SerializedName("created_by")
  private Owner createdBy = null;

  @SerializedName("last_updated_at")
  private String lastUpdatedAt = null;

  @SerializedName("last_updated_by")
  private Owner lastUpdatedBy = null;

  @SerializedName("logstore_retention_bytes")
  private Integer logstoreRetentionBytes = null;

  @SerializedName("logstore_retention_ms")
  private Integer logstoreRetentionMs = null;

  @SerializedName("materialized")
  private Boolean materialized = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("query")
  private String query = null;

  @SerializedName("stats")
  private StreamStats stats = null;

  @SerializedName("ttl")
  private String ttl = null;

  public View columns(List<ColumnsResp> columns) {
    this.columns = columns;
    return this;
  }

  public View addColumnsItem(ColumnsResp columnsItem) {
    this.columns.add(columnsItem);
    return this;
  }

   /**
   * Get columns
   * @return columns
  **/
  @ApiModelProperty(required = true, value = "")
  public List<ColumnsResp> getColumns() {
    return columns;
  }

  public void setColumns(List<ColumnsResp> columns) {
    this.columns = columns;
  }

  public View createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @ApiModelProperty(value = "")
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  public View createdBy(Owner createdBy) {
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Get createdBy
   * @return createdBy
  **/
  @ApiModelProperty(value = "")
  public Owner getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(Owner createdBy) {
    this.createdBy = createdBy;
  }

  public View lastUpdatedAt(String lastUpdatedAt) {
    this.lastUpdatedAt = lastUpdatedAt;
    return this;
  }

   /**
   * Get lastUpdatedAt
   * @return lastUpdatedAt
  **/
  @ApiModelProperty(value = "")
  public String getLastUpdatedAt() {
    return lastUpdatedAt;
  }

  public void setLastUpdatedAt(String lastUpdatedAt) {
    this.lastUpdatedAt = lastUpdatedAt;
  }

  public View lastUpdatedBy(Owner lastUpdatedBy) {
    this.lastUpdatedBy = lastUpdatedBy;
    return this;
  }

   /**
   * Get lastUpdatedBy
   * @return lastUpdatedBy
  **/
  @ApiModelProperty(value = "")
  public Owner getLastUpdatedBy() {
    return lastUpdatedBy;
  }

  public void setLastUpdatedBy(Owner lastUpdatedBy) {
    this.lastUpdatedBy = lastUpdatedBy;
  }

  public View logstoreRetentionBytes(Integer logstoreRetentionBytes) {
    this.logstoreRetentionBytes = logstoreRetentionBytes;
    return this;
  }

   /**
   * Get logstoreRetentionBytes
   * @return logstoreRetentionBytes
  **/
  @ApiModelProperty(required = true, value = "")
  public Integer getLogstoreRetentionBytes() {
    return logstoreRetentionBytes;
  }

  public void setLogstoreRetentionBytes(Integer logstoreRetentionBytes) {
    this.logstoreRetentionBytes = logstoreRetentionBytes;
  }

  public View logstoreRetentionMs(Integer logstoreRetentionMs) {
    this.logstoreRetentionMs = logstoreRetentionMs;
    return this;
  }

   /**
   * Get logstoreRetentionMs
   * @return logstoreRetentionMs
  **/
  @ApiModelProperty(required = true, value = "")
  public Integer getLogstoreRetentionMs() {
    return logstoreRetentionMs;
  }

  public void setLogstoreRetentionMs(Integer logstoreRetentionMs) {
    this.logstoreRetentionMs = logstoreRetentionMs;
  }

  public View materialized(Boolean materialized) {
    this.materialized = materialized;
    return this;
  }

   /**
   * Get materialized
   * @return materialized
  **/
  @ApiModelProperty(value = "")
  public Boolean isMaterialized() {
    return materialized;
  }

  public void setMaterialized(Boolean materialized) {
    this.materialized = materialized;
  }

  public View name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public View query(String query) {
    this.query = query;
    return this;
  }

   /**
   * Get query
   * @return query
  **/
  @ApiModelProperty(value = "")
  public String getQuery() {
    return query;
  }

  public void setQuery(String query) {
    this.query = query;
  }

  public View stats(StreamStats stats) {
    this.stats = stats;
    return this;
  }

   /**
   * Get stats
   * @return stats
  **/
  @ApiModelProperty(required = true, value = "")
  public StreamStats getStats() {
    return stats;
  }

  public void setStats(StreamStats stats) {
    this.stats = stats;
  }

  public View ttl(String ttl) {
    this.ttl = ttl;
    return this;
  }

   /**
   * Get ttl
   * @return ttl
  **/
  @ApiModelProperty(required = true, value = "")
  public String getTtl() {
    return ttl;
  }

  public void setTtl(String ttl) {
    this.ttl = ttl;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    View view = (View) o;
    return Objects.equals(this.columns, view.columns) &&
        Objects.equals(this.createdAt, view.createdAt) &&
        Objects.equals(this.createdBy, view.createdBy) &&
        Objects.equals(this.lastUpdatedAt, view.lastUpdatedAt) &&
        Objects.equals(this.lastUpdatedBy, view.lastUpdatedBy) &&
        Objects.equals(this.logstoreRetentionBytes, view.logstoreRetentionBytes) &&
        Objects.equals(this.logstoreRetentionMs, view.logstoreRetentionMs) &&
        Objects.equals(this.materialized, view.materialized) &&
        Objects.equals(this.name, view.name) &&
        Objects.equals(this.query, view.query) &&
        Objects.equals(this.stats, view.stats) &&
        Objects.equals(this.ttl, view.ttl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(columns, createdAt, createdBy, lastUpdatedAt, lastUpdatedBy, logstoreRetentionBytes, logstoreRetentionMs, materialized, name, query, stats, ttl);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class View {\n");
    
    sb.append("    columns: ").append(toIndentedString(columns)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    lastUpdatedAt: ").append(toIndentedString(lastUpdatedAt)).append("\n");
    sb.append("    lastUpdatedBy: ").append(toIndentedString(lastUpdatedBy)).append("\n");
    sb.append("    logstoreRetentionBytes: ").append(toIndentedString(logstoreRetentionBytes)).append("\n");
    sb.append("    logstoreRetentionMs: ").append(toIndentedString(logstoreRetentionMs)).append("\n");
    sb.append("    materialized: ").append(toIndentedString(materialized)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    query: ").append(toIndentedString(query)).append("\n");
    sb.append("    stats: ").append(toIndentedString(stats)).append("\n");
    sb.append("    ttl: ").append(toIndentedString(ttl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

