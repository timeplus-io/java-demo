/*
 * Timeplus
 * Welcome to the Timeplus HTTP REST API specification.
 *
 * OpenAPI spec version: v1
 * Contact: support@timeplus.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Owner;
import io.swagger.client.model.QueryResult;
import io.swagger.client.model.SQLAnalyzeResult;
import io.swagger.client.model.SinkStat;
import io.swagger.client.model.TimeColumns;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Query
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-06-06T23:45:14.171Z")
public class Query {
  @SerializedName("analysis")
  private SQLAnalyzeResult analysis = null;

  @SerializedName("created_at")
  private String createdAt = null;

  @SerializedName("created_by")
  private Owner createdBy = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("duration")
  private Integer duration = null;

  @SerializedName("end_time")
  private Integer endTime = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("last_updated_at")
  private String lastUpdatedAt = null;

  @SerializedName("last_updated_by")
  private Owner lastUpdatedBy = null;

  @SerializedName("message")
  private String message = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("response_time")
  private Integer responseTime = null;

  @SerializedName("result")
  private QueryResult result = null;

  @SerializedName("sinks")
  private Map<String, SinkStat> sinks = new HashMap<String, SinkStat>();

  @SerializedName("sql")
  private String sql = null;

  @SerializedName("start_time")
  private Integer startTime = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("tags")
  private List<String> tags = null;

  @SerializedName("timeColumns")
  private TimeColumns timeColumns = null;

  public Query analysis(SQLAnalyzeResult analysis) {
    this.analysis = analysis;
    return this;
  }

   /**
   * Get analysis
   * @return analysis
  **/
  @ApiModelProperty(required = true, value = "")
  public SQLAnalyzeResult getAnalysis() {
    return analysis;
  }

  public void setAnalysis(SQLAnalyzeResult analysis) {
    this.analysis = analysis;
  }

  public Query createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @ApiModelProperty(example = "2023-02-01 23:22:59", value = "")
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  public Query createdBy(Owner createdBy) {
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Get createdBy
   * @return createdBy
  **/
  @ApiModelProperty(value = "")
  public Owner getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(Owner createdBy) {
    this.createdBy = createdBy;
  }

  public Query description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Query duration(Integer duration) {
    this.duration = duration;
    return this;
  }

   /**
   * Get duration
   * @return duration
  **/
  @ApiModelProperty(required = true, value = "")
  public Integer getDuration() {
    return duration;
  }

  public void setDuration(Integer duration) {
    this.duration = duration;
  }

  public Query endTime(Integer endTime) {
    this.endTime = endTime;
    return this;
  }

   /**
   * Get endTime
   * @return endTime
  **/
  @ApiModelProperty(required = true, value = "")
  public Integer getEndTime() {
    return endTime;
  }

  public void setEndTime(Integer endTime) {
    this.endTime = endTime;
  }

  public Query id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Query lastUpdatedAt(String lastUpdatedAt) {
    this.lastUpdatedAt = lastUpdatedAt;
    return this;
  }

   /**
   * Get lastUpdatedAt
   * @return lastUpdatedAt
  **/
  @ApiModelProperty(example = "2023-02-05 11:12:13", value = "")
  public String getLastUpdatedAt() {
    return lastUpdatedAt;
  }

  public void setLastUpdatedAt(String lastUpdatedAt) {
    this.lastUpdatedAt = lastUpdatedAt;
  }

  public Query lastUpdatedBy(Owner lastUpdatedBy) {
    this.lastUpdatedBy = lastUpdatedBy;
    return this;
  }

   /**
   * Get lastUpdatedBy
   * @return lastUpdatedBy
  **/
  @ApiModelProperty(value = "")
  public Owner getLastUpdatedBy() {
    return lastUpdatedBy;
  }

  public void setLastUpdatedBy(Owner lastUpdatedBy) {
    this.lastUpdatedBy = lastUpdatedBy;
  }

  public Query message(String message) {
    this.message = message;
    return this;
  }

   /**
   * Get message
   * @return message
  **/
  @ApiModelProperty(required = true, value = "")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }

  public Query name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Query responseTime(Integer responseTime) {
    this.responseTime = responseTime;
    return this;
  }

   /**
   * Get responseTime
   * @return responseTime
  **/
  @ApiModelProperty(required = true, value = "")
  public Integer getResponseTime() {
    return responseTime;
  }

  public void setResponseTime(Integer responseTime) {
    this.responseTime = responseTime;
  }

  public Query result(QueryResult result) {
    this.result = result;
    return this;
  }

   /**
   * Get result
   * @return result
  **/
  @ApiModelProperty(required = true, value = "")
  public QueryResult getResult() {
    return result;
  }

  public void setResult(QueryResult result) {
    this.result = result;
  }

  public Query sinks(Map<String, SinkStat> sinks) {
    this.sinks = sinks;
    return this;
  }

  public Query putSinksItem(String key, SinkStat sinksItem) {
    this.sinks.put(key, sinksItem);
    return this;
  }

   /**
   * Get sinks
   * @return sinks
  **/
  @ApiModelProperty(required = true, value = "")
  public Map<String, SinkStat> getSinks() {
    return sinks;
  }

  public void setSinks(Map<String, SinkStat> sinks) {
    this.sinks = sinks;
  }

  public Query sql(String sql) {
    this.sql = sql;
    return this;
  }

   /**
   * Get sql
   * @return sql
  **/
  @ApiModelProperty(required = true, value = "")
  public String getSql() {
    return sql;
  }

  public void setSql(String sql) {
    this.sql = sql;
  }

  public Query startTime(Integer startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * Get startTime
   * @return startTime
  **/
  @ApiModelProperty(required = true, value = "")
  public Integer getStartTime() {
    return startTime;
  }

  public void setStartTime(Integer startTime) {
    this.startTime = startTime;
  }

  public Query status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(required = true, value = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public Query tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public Query addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<String>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @ApiModelProperty(value = "")
  public List<String> getTags() {
    return tags;
  }

  public void setTags(List<String> tags) {
    this.tags = tags;
  }

  public Query timeColumns(TimeColumns timeColumns) {
    this.timeColumns = timeColumns;
    return this;
  }

   /**
   * Get timeColumns
   * @return timeColumns
  **/
  @ApiModelProperty(required = true, value = "")
  public TimeColumns getTimeColumns() {
    return timeColumns;
  }

  public void setTimeColumns(TimeColumns timeColumns) {
    this.timeColumns = timeColumns;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Query query = (Query) o;
    return Objects.equals(this.analysis, query.analysis) &&
        Objects.equals(this.createdAt, query.createdAt) &&
        Objects.equals(this.createdBy, query.createdBy) &&
        Objects.equals(this.description, query.description) &&
        Objects.equals(this.duration, query.duration) &&
        Objects.equals(this.endTime, query.endTime) &&
        Objects.equals(this.id, query.id) &&
        Objects.equals(this.lastUpdatedAt, query.lastUpdatedAt) &&
        Objects.equals(this.lastUpdatedBy, query.lastUpdatedBy) &&
        Objects.equals(this.message, query.message) &&
        Objects.equals(this.name, query.name) &&
        Objects.equals(this.responseTime, query.responseTime) &&
        Objects.equals(this.result, query.result) &&
        Objects.equals(this.sinks, query.sinks) &&
        Objects.equals(this.sql, query.sql) &&
        Objects.equals(this.startTime, query.startTime) &&
        Objects.equals(this.status, query.status) &&
        Objects.equals(this.tags, query.tags) &&
        Objects.equals(this.timeColumns, query.timeColumns);
  }

  @Override
  public int hashCode() {
    return Objects.hash(analysis, createdAt, createdBy, description, duration, endTime, id, lastUpdatedAt, lastUpdatedBy, message, name, responseTime, result, sinks, sql, startTime, status, tags, timeColumns);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Query {\n");
    
    sb.append("    analysis: ").append(toIndentedString(analysis)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lastUpdatedAt: ").append(toIndentedString(lastUpdatedAt)).append("\n");
    sb.append("    lastUpdatedBy: ").append(toIndentedString(lastUpdatedBy)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    responseTime: ").append(toIndentedString(responseTime)).append("\n");
    sb.append("    result: ").append(toIndentedString(result)).append("\n");
    sb.append("    sinks: ").append(toIndentedString(sinks)).append("\n");
    sb.append("    sql: ").append(toIndentedString(sql)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    timeColumns: ").append(toIndentedString(timeColumns)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

