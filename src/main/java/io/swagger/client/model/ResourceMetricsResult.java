/*
 * Timeplus
 * Welcome to the Timeplus HTTP REST API specification.
 *
 * OpenAPI spec version: v1
 * Contact: support@timeplus.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.MetricsQueryThroughput;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * ResourceMetricsResult
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-06-06T23:45:14.171Z")
public class ResourceMetricsResult {
  @SerializedName("failure_count")
  private BigDecimal failureCount = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("success_count")
  private BigDecimal successCount = null;

  @SerializedName("throughput")
  private List<MetricsQueryThroughput> throughput = new ArrayList<MetricsQueryThroughput>();

  public ResourceMetricsResult failureCount(BigDecimal failureCount) {
    this.failureCount = failureCount;
    return this;
  }

   /**
   * Get failureCount
   * @return failureCount
  **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getFailureCount() {
    return failureCount;
  }

  public void setFailureCount(BigDecimal failureCount) {
    this.failureCount = failureCount;
  }

  public ResourceMetricsResult id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ResourceMetricsResult successCount(BigDecimal successCount) {
    this.successCount = successCount;
    return this;
  }

   /**
   * Get successCount
   * @return successCount
  **/
  @ApiModelProperty(required = true, value = "")
  public BigDecimal getSuccessCount() {
    return successCount;
  }

  public void setSuccessCount(BigDecimal successCount) {
    this.successCount = successCount;
  }

  public ResourceMetricsResult throughput(List<MetricsQueryThroughput> throughput) {
    this.throughput = throughput;
    return this;
  }

  public ResourceMetricsResult addThroughputItem(MetricsQueryThroughput throughputItem) {
    this.throughput.add(throughputItem);
    return this;
  }

   /**
   * Get throughput
   * @return throughput
  **/
  @ApiModelProperty(required = true, value = "")
  public List<MetricsQueryThroughput> getThroughput() {
    return throughput;
  }

  public void setThroughput(List<MetricsQueryThroughput> throughput) {
    this.throughput = throughput;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResourceMetricsResult resourceMetricsResult = (ResourceMetricsResult) o;
    return Objects.equals(this.failureCount, resourceMetricsResult.failureCount) &&
        Objects.equals(this.id, resourceMetricsResult.id) &&
        Objects.equals(this.successCount, resourceMetricsResult.successCount) &&
        Objects.equals(this.throughput, resourceMetricsResult.throughput);
  }

  @Override
  public int hashCode() {
    return Objects.hash(failureCount, id, successCount, throughput);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResourceMetricsResult {\n");
    
    sb.append("    failureCount: ").append(toIndentedString(failureCount)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    successCount: ").append(toIndentedString(successCount)).append("\n");
    sb.append("    throughput: ").append(toIndentedString(throughput)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

